<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Maps.Editors.PointEditor" locale="">
  <web>Maps.Editors</web>
  <name>PointEditor</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Maps.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>Point Editor</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{include reference="Maps.Code.CommonMacros" /}}

{{velocity}}
#set ($discard = $xwiki.ssx.use('Maps.Code.LeafletUtils'))
#set ($discard = $xwiki.jsx.use('Maps.Code.LeafletUtils'))
#set ($discard = $xwiki.jsx.use('Maps.Editors.PointEditor'))

## Handling creation of the map
#if ("$!request.pointSubmit" != '')
  #set ($pointDocLocation = "${request.pointSpace}.${request.pointName}")
  #set ($newPoint = $xwiki.getDocument($pointDocLocation))
  #set ($discard = $newPoint.setTitle(${request.pointName}))
  #set ($discard = $newPoint.setParent(${request.pointSpace}))
  ## Check if custom marker is uploaded
  #if ("$!xwiki.fileupload.getFileName('customMarkerImg')" != '')
    ## Set uploaded marker image as the attachment of the new map page
    #set ($markerImgBytes = $xwiki.fileupload.getFileItemData('customMarkerImg'))
    $newPoint.addAttachment('marker.png', $markerImgBytes)
  #end
  ## Create and set values for the SimpleMapClass object
  #set ($newPointObj = $newPoint.newObject('Maps.Code.PointClass'))
  #set ($markerLocation = $request.markerLocation.split(','))
  #set ($markerLocation[0] = $markerLocation[0].trim())
  #set ($markerLocation[1] = $markerLocation[1].trim())
  #set ($discard = $newPointObj.set('latitude', $markerLocation[0]))
  #set ($discard = $newPointObj.set('longitude', $markerLocation[1]))
  #if (!$xwiki.exists($pointDocLocation) &amp;&amp; $xwiki.hasAccessLevel('edit', $xcontext.user, $pointDocLocation))
    $newPoint.save()
    $response.sendRedirect($xwiki.getURL($pointDocLocation, 'edit'))
  #end
#end

## Map with Marker and Popup
#if ('$!pointDocLocation' != '' &amp;&amp; $xwiki.exists($pointDocLocation))
{{warning}}The target document already exists. Please choose a different name, or [[view the existing document&gt;&gt;$pointDocLocation]]{{/warning}}
#end
{{html wiki="true" clean="false"}}
(% class="row" %)(((
  (% class="col-sm-6" %)(((
  ## Preview of the map
  &lt;p class="xform"&gt;&lt;span class="xHint"&gt;$services.localization.render('intmap.pointEditor.hint')&lt;/span&gt;&lt;/p&gt;
  (% class="map-wrapper" %)(((
    (% class="map-preview point-editor-map-preview" id="map-${util.generateRandomString(5)}" style="width: 100%; height: 300px;" %)((()))
    (% class="map-search-filter" %)(((
      #displayLocationSearchForm()
    )))
    (% id="map-search-close" %)(((
    &lt;i class="fa fa-arrow-left"&gt;&lt;/i&gt;
    )))
  )))
  )))
  (% class="col-sm-6" %)(((
  ## Form for creating the map
  &lt;form class="xform" action="" method="post" enctype="multipart/form-data"&gt;
    &lt;input type="hidden" id="markerLocation" name="markerLocation" value="48.8566,2.3522" required /&gt;
    &lt;dl&gt;
      &lt;dt&gt;
        &lt;label for="pointName"&gt;$services.localization.render('intmap.pointEditor.pointName') &lt;span class="xRequired"&gt;(Required)&lt;/span&gt;&lt;/label&gt;
      &lt;/dt&gt;
      &lt;dd&gt;
        &lt;input type="text" id="pointName" name="pointName" value="" required /&gt;
      &lt;/dd&gt;
      &lt;dt&gt;
        &lt;label for="pointSpace"&gt;$services.localization.render('intmap.pointEditor.pointSpace') &lt;span class="xRequired"&gt;(Required)&lt;/span&gt;&lt;/label&gt;
      &lt;/dt&gt;
      &lt;dd&gt;
        &lt;input type="text" id="pointSpace" name="pointSpace" value="" required /&gt;
      &lt;/dd&gt;
      &lt;dt&gt;
        &lt;label for="customMarkerImg"&gt;$services.localization.render('intmap.pointEditor.customMarker')&lt;/label&gt;
      &lt;/dt&gt;
      &lt;dd&gt;
        &lt;input type="file" id="customMarkerImg" name="customMarkerImg" accept="image/*" /&gt;
      &lt;/dd&gt;
    &lt;/dl&gt;
    &lt;p&gt;&lt;input type="submit" class="btn btn-primary" name="pointSubmit" value="$services.localization.render('intmap.pointEditor.pointSubmit')" /&gt;&lt;/p&gt;
  &lt;/form&gt;
  )))
)))
{{/html}}
{{/velocity}}</content>
  <object>
    <name>Maps.Editors.PointEditor</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>1e7d7e2f-7c33-4d63-b7dc-c9adc88e44f6</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>requirejs.config({
  paths: {
    'leaflet': ['$services.webjars.url("leaflet", "leaflet.js")']
  }
});
require(['jquery', 'leaflet', 'leaflet-commons', 'bootstrap'], function ($, leaflet, leafletCommons) {
  'use strict';
  function init()
  {

    var map;

    //Render the map
    $$('.point-editor-map-preview').each(function (element) {
      var mapId = $(element).attr('id').replace('map-', '');
      var options = {
        'id': mapId,
        'addFullscreen': 0,
        'includeCurrentLocation': 1
      };
      map = leafletCommons.createEmptyMap(options);
      map.on('click', function (e) {
        if ($(".leaflet-popup-pane").html() == '') {
          $('.map-search-filter').removeClass('open');
        }
      });
      var locationInput = $('#markerLocation');
      var location = locationInput.val().split(',');
      map.setView(location, 14);
      leafletCommons.addSinglePointSelection(map, location, function (marker) {
        var newLocation = marker.getLatLng();
        location = [newLocation.lat, newLocation.lng];
        locationInput.val(location.join(','));
      });
    });

    //Point editor place search
    $('.map-search-form').submit(function (e) {
      e.preventDefault();
      var formVal = $(this).find('input[type=search]').val();
      if (formVal !== '') {
        leafletCommons.getLocationCoords(formVal, function (location) {
          if (map &amp;&amp; location) {
            map.setView(L.latLng(location), 14);
          }
        });
      }
    });

  }

  //Run the init() function when dom is loaded or updated
  (XWiki &amp;&amp; XWiki.domIsLoaded &amp;&amp; init()) || document.observe("xwiki:dom:loaded", init);

});</code>
    </property>
    <property>
      <name>point-editor</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
