<?xml version="1.0" encoding="UTF-8"?>
<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Map.Code.Leaflet" locale="">
  <web>Map.Code</web>
  <name>Leaflet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1558169692000</creationDate>
  <parent>Map.Map Editor.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1558306765000</date>
  <contentUpdateDate>1558169692000</contentUpdateDate>
  <version>1.1</version>
  <title>Leaflet</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content/>
  <object>
    <name>Map.Code.Leaflet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>183f1668-1ba5-4beb-aba5-6588a615dccf</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>requirejs.config({
  paths: {
    'leaflet': ['$services.webjars.url("leaflet", "leaflet.js")'],
    'leafletSearch': ['https://cdn.jsdelivr.net/npm/leaflet-search@2.9.8/dist/leaflet-search.src.min']
  },
  shim: {
    'leaflet-search.src.min': ['leaflet']
  }
});
require(['jquery', 'leaflet', 'leafletSearch'], function($, leaflet, ls){
  'use strict';
  XWiki.simpleMap = Class.create({
    initialize: function(element, options, data){
      var that = this;
      //Check if the location type is an address or coordinates
      var locType = 'address';
      if(data.location){
        var checkLoc = data.location.split(',');
        //Location type is coordinates if there are two values and each is a number
        if(checkLoc.length == 2 &amp;&amp; !isNaN(checkLoc[0].trim()) &amp;&amp; !isNaN(checkLoc[1].trim())){
          locType = 'latLng';
        }
      }
      if(locType == 'latLng'){
        //Make an array for of the two coordinates
        var latLng = data.location.split(',').map((val) =&gt; {
          return val.trim()
        });
        //Set the location to the array
        data.location = latLng;
        //Create the map with the information
        that.createMap(options.mapId, options.tiles, options.zoom, data);
      } else {
        //If the location type is address, get the location coordinates from openstreetmap api
        var queryURL = 'https://nominatim.openstreetmap.org/search';
        var q = data.location;
        //Make the request
        $.getJSON(queryURL, {'q':q, 'format':'json'}).then(function(locFromAddress) {
          if (locFromAddress != undefined &amp;&amp; locFromAddress.length &gt; 0) {
            var latLng = [locFromAddress[0].lat, locFromAddress[0].lon];
            //Set the location to the coordinates gotten from openstreetmap api
            data.location = latLng;
            that.createMap(options.mapId, options.tiles, options.zoom, data);
          } else {
            //Display an error if the address does not map to a location
            $(element).html('&lt;b&gt;Map cannot be displayed&lt;/b&gt;&lt;br/&gt;Error while geocoding the address "' + q +'" with OpenStreetMap Nominatim');
            new XWiki.widgets.Notification('Error while geocoding the address "' + q +'" with OpenStreetMap Nominatim', 'error');
          }
        });
      }
    },
    createMap: function(mapId, tiles, zoom, data){
      //Create the map
      var map = L.map(mapId).setView(data.location, zoom);
      //Add a tiles layer to the map (the background)
      L.tileLayer(tiles, {
        attribution: '&amp;copy; &lt;a href="https://www.openstreetmap.org/"&gt;OpenStreetMap&lt;/a&gt;',
        maxZoom: 18,
        id: 'mapbox.streets'
      }).addTo(map);
      //Set options for the icon of marker
      var icon = L.icon({
        iconUrl: "$services.webjars.url('leaflet', 'images/marker-icon.png')",
        iconRetinaUrl: "$services.webjars.url('leaflet', 'images/marker-icon-2x.png')",
        shadowUrl: "$services.webjars.url('leaflet', 'images/marker-shadow.png')",
        iconSize: [25,41],
        iconAnchor: [12,41],
        popupAnchor: [1,-34],
        tooltipAnchor: [16,-28],
        shadowSize: [41,41]
      });
      //Create a marker at the specified location and add it to map
      var marker = L.marker(data.location, {icon: icon}).addTo(map);
      //If popup information is set, bind it to the marker
      if(data.popup){
        marker.bindPopup(data.popup);
      }
      addNavigation(map);
      addSearch(map);
    }
  });

  function init(){
    $$('.map-container').each(function(element){
      //Get options from the element
      var options = {};
      options.mapId = element.id;
      var zoom = element.dataset.zoom;
      options.zoom = zoom !== undefined ? zoom : 14;
      options.tiles = element.dataset.tiles !== undefined ? element.dataset.tiles : 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
      //Get the data to be displayed on the map
      var data = {};
      data.location = element.dataset.location;
      data.popup = element.dataset.popup;
      //Create the map with the data collected
      new XWiki.simpleMap(element, options, data);
    })
  };

  //Run the init() function when dom is loaded
  (XWiki &amp;&amp; XWiki.domIsLoaded &amp;&amp; init()) || document.observe('xwiki:dom:loaded', init);

  });</code>
    </property>
    <property>
      <name>leaflet-map</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Map.Code.Leaflet</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>a77b225d-df4c-4db8-810d-84371ea7fcbf</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>//COMMON FUNCTIONS

//Remove the old marker and add a new one
function addMarker(oldMarker, map, e){
  if(oldMarker){
    oldMarker.remove();
  }
  return L.marker(e.latlng).addTo(map);
}

//Works only if the connection is secure (https etc.)
function locateUser(map){
  var locMarker = L.circleMarker();
  map.locate({setView: true, maxZoom: 16, watch: false});
  map.on('locationfound', function(e){
    locMarker.remove();
    locMarker = L.circleMarker(e.latlng, {
      color: '#146ea7',
      fillColor: '#146ea7',
      fillOpacity: 0.4,
      radius: 10
    }).bindPopup('Current location').addTo(map);
  })
}

//Function for adding navigation control
function addNavigation(map){
  L.Control.navigation = L.Control.extend({
    onAdd: function(map){
      var container = L.DomUtil.create('div', 'leaflet-control-loc');
      var locateIcon = L.DomUtil.create('div', 'fa fa-map-marker');
      locateIcon.setAttribute('title', 'Current location');
      locateIcon.setAttribute('aria-label', 'Current location');
      container.appendChild(locateIcon);
      L.DomEvent.on(container, 'click', L.DomEvent.stopPropagation)
        .on(container, 'click', L.DomEvent.stop)
        .on(container, 'click', this._locateUser, this);
      return container;
    },
    _locateUser: function(e){
      e.preventDefault();
      locateUser(this._map);
    }
  });
  (new L.Control.navigation({position: 'topright'})).addTo(map);
}

//Function for adding search control
function addSearch(map){
  map.addControl(new L.Control.Search({
    url: 'http://nominatim.openstreetmap.org/search?format=json&amp;q={s}',
    jsonpParam: 'json_callback',
    propertyName: 'display_name',
    propertyLoc: ['lat', 'lon'],
    marker: false,
    autoCollapse: true,
    autoType: false,
    minLength: 2,
    position: 'topright'
  }));
}</code>
    </property>
    <property>
      <name>leaflet-common-functions</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Map.Code.Leaflet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>efc35b1a-4b82-4816-9d4a-b9b9481591a3</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>@import "$services.webjars.url('leaflet', 'leaflet.css')";
@import "https://cdn.jsdelivr.net/npm/leaflet-search@2.9.8/src/leaflet-search.css";
.map-container, .simplemap-preview{
  border: 4px solid white;
  border-radius: 5px;
  box-shadow: 0px 0px 3px silver;
}
.leaflet-container .leaflet-control-search, .leaflet-container .leaflet-control-search:hover, .leaflet-container .leaflet-control-search:active{
  background: none;
  border: none;
}
.leaflet-container .leaflet-control-loc, .leaflet-container .leaflet-control-search .search-button{
  background: white;
  width: 40px;
  height: 40px;
  text-align: center;
  cursor: pointer;
  border-radius: 50%;
  overflow: hidden;
  border: 1px solid silver;
  transition: background-color 0.3s;
}
.leaflet-container .leaflet-control-search .search-button{
  font-family: FontAwesome;
  position: relative;
}
.leaflet-control-loc&gt;.fa, .leaflet-container .leaflet-control-search .search-button:before{
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  color: black;
  font-size: 20px;
}
.leaflet-container .leaflet-control-search .search-button:before{
  content: '\f002';
  font-size: 17px;
  margin-top: -2px;
}
.leaflet-container .leaflet-control-loc:hover, .leaflet-container .leaflet-control-search .search-button:hover{
  background: #f4f4f4;
  transition: background 0.3s;
  text-decoration: none;
}
.leaflet-container .leaflet-control-search input.search-input{
  border: 1px solid silver;
  border-radius: 15px;
  color: dimgray;
  height: 40px;
  padding: 5px 10px;
  margin: 0;
}
.leaflet-control-search .search-cancel{
  margin: 10px 0;
  right: 42px;
}
.leaflet-control-search.search-load input.search-input{
  background: white;
}
.leaflet-control-search .search-tooltip{
  border: none;
  border-radius: 10px;
  background: white;
  color: black;
  padding: 5px;
  left: 0;
  right: 0;
  float: right;
  overflow: auto;
}
.leaflet-control-search .search-tooltip .search-tip{
  border: none;
  border-radius: 0;
  background: white;
  color: black;
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name>leaflet-css</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
